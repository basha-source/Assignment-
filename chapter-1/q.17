def champagneTower(poured, query_row, query_glass):
    # Initialize a 2D list for the champagne distribution
    dp = [[0.0] * (r + 1) for r in range(query_row + 1)]
    dp[0][0] = poured
    
    for i in range(query_row):
        for j in range(i + 1):
            excess = max(0, dp[i][j] - 1)
            if excess > 0:
                dp[i+1][j] += excess / 2.0
                dp[i+1][j+1] += excess / 2.0
    
    return min(1.0, dp[query_row][query_glass])

# Test cases
print(champagneTower(1, 1, 1))  # Output: 0.0
print(champagneTower(2, 1, 1))  # Output: 0.5
