def uniquePaths(m, n):
    # Initialize a 2D array for DP
    dp = [[0] * n for _ in range(m)]
    
    # Base cases
    for i in range(m):
        dp[i][0] = 1  # Only one way to reach any cell in the leftmost column
    
    for j in range(n):
        dp[0][j] = 1  # Only one way to reach any cell in the top row
    
    # Fill the DP table
    for i in range(1, m):
        for j in range(1, n):
            dp[i][j] = dp[i-1][j] + dp[i][j-1]
    
    # The result is the number of unique paths to reach the bottom-right corner
    return dp[m-1][n-1]

# Test cases
print(uniquePaths(7, 3))  # Output: 28
print(uniquePaths(3, 2))  # Output: 3
