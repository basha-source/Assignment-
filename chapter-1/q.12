def rob(nums):
    n = len(nums)
    
    if n == 0:
        return 0
    elif n == 1:
        return nums[0]
    elif n == 2:
        return max(nums[0], nums[1])
    
    # Function to compute maximum amount of money that can be robbed
    def rob_linear(houses):
        dp = [0] * len(houses)
        dp[0] = houses[0]
        dp[1] = max(houses[0], houses[1])
        
        for i in range(2, len(houses)):
            dp[i] = max(dp[i-1], houses[i] + dp[i-2])
        
        return dp[-1]
    
    # Calculate maximum amount of money robbing from house 0 to n-2 and from house 1 to n-1
    return max(rob_linear(nums[:-1]), rob_linear(nums[1:]))
    
# Test cases
nums1 = [2, 3, 2]
nums2 = [1, 2, 3, 1]

print("Maximum money that can be robbed without alerting the police:", rob(nums1))  # Output: 3
print("Maximum money that can be robbed without alerting the police:", rob(nums2))  # Output: 4
