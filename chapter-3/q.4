def quick_sort(arr, start, end):
 if start < end:
 p = partition(arr, start, end)
 print(f"Array after partitioning with pivot {arr[p]}: {arr}")
 quick_sort(arr, start, p - 1)
 quick_sort(arr, p + 1, end)
def partition(arr, start, end):
 mid = (start + end) // 2
 pivot = arr[mid]
 arr[mid], arr[end] = arr[end], arr[mid] # Move pivot to end for simplicity
 i = start
 for j in range(start, end):
 if arr[j] < pivot:
 arr[i], arr[j] = arr[j], arr[i]
 i += 1
 arr[i], arr[end] = arr[end], arr[i] # Move pivot to its correct place
 return i
def quick_sort_wrapper(arr):
 quick_sort(arr, 0, len(arr) - 1)
 print(f"Final sorted array: {arr}")
arr = [19, 72, 35, 46, 58, 91, 22, 31]
print(f"Original array: {arr}")
quick_sort_wrapper(arr)
test_cases = [
 [31, 23, 35, 27, 11, 21, 15, 28],
 [22, 34, 25, 36, 43, 67, 52, 13, 65, 17]
]
for test in test_cases:
 print(f"\nOriginal array: {test}")
 quick_sort_wrapper(test
